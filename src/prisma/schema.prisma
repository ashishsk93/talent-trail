//
// Autogenerated by `prisma-import`
// Any modifications will be overwritten on subsequent runs.
//

//
// schema.prisma
//

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

//
// application.prisma
//

model Application {
  id           Int                   @id @default(autoincrement())
  candidate    Candidate             @relation(fields: [candidateId], references: [id])
  candidateId  Int
  job          Job                   @relation(fields: [jobId], references: [id])
  jobId        Int
  referredBy   Employee?             @relation(fields: [referredById], references: [id])
  referredById Int?
  status       String
  appliedDate  DateTime              @default(now())
  score        Int?
  timeline     ApplicationTimeline[]
  createdAt    DateTime              @default(now())
  updatedAt    DateTime?             @updatedAt

  @@index([candidateId])
  @@index([jobId])
  @@index([referredById])
}

//
// application.timeline.prisma
//

model ApplicationTimeline {
  applicationId Int
  application   Application @relation(fields: [applicationId], references: [id])
  event         String
  status        String
  data          Json?
  when          DateTime

  @@id([applicationId, event])
  @@index([applicationId])
}

//
// candidate.prisma
//

model Candidate {
  id             Int           @id @default(autoincrement())
  name           String
  email          String        @unique
  password       String
  phone          String
  age            Int
  info           Json?
  onboardingInfo Json?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime?     @updatedAt
  applications   Application[]
}

//
// employee.prisma
//

model Employee {
  id         Int           @id @default(autoincrement())
  name       String
  email      String        @unique
  password   String
  roles      String[]
  skills     String[]
  experience Int
  createdAt  DateTime      @default(now())
  updatedAt  DateTime?     @updatedAt
  referrals  Application[]
}

//
// category.prisma
//

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  jobs      Job[]
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

//
// job.prisma
//

model Job {
  id             Int           @id @default(autoincrement())
  title          String
  description    String
  qualifications String[]
  requirements   String[]
  skills         String[]
  location       Json?
  info           Json?
  experience     Int
  category       Category      @relation(fields: [categoryId], references: [id])
  categoryId     Int
  type           String
  createdAt      DateTime      @default(now())
  updatedAt      DateTime?     @updatedAt
  applications   Application[]

  @@index([categoryId])
}
