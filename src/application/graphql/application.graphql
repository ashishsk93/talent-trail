type Timeline {
  applicationId: Int!
  event: String!
  status: String!
  data: JSON
  when: Date
}

type Application {
  id: Int!
  candidateId: Int!
  jobId: Int!
  referredById: String
  status: String!
  appliedDate: Date
  candidate: Candidate!
  referredBy: Employee
  job: Job
  timeline: [Timeline]
  score: Int
}

enum Verdict {
  ACCEPTED
  REJECTED
}

input CreateApplicationInput {
  candidateId: Int!
  jobId: Int!
}

input SubmitReviewInput {
  verdict: Verdict!
}

type Query {
  getApplications: [Application]
}

type Mutation {
  createApplication(input: CreateApplicationInput!): Application
  submitReview(id: Int!, input: SubmitReviewInput!): Application
}
